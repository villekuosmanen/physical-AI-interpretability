[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "physical-ai-interpretability"
version = "0.1.0"
description = "Tools for interpretability analysis of physical AI models, including sparse autoencoders and attention mapping"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Ville Kuosmanen"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.10"
dependencies = [
    # Core dependencies
    "torch>=1.12.0",
    "numpy>=1.20.0",
    "tqdm>=4.60.0",
    
    # Data handling
    "safetensors>=0.3.0",
    "pandas>=1.3.0",
    "scipy",
    "huggingface_hub",
    
    # Computer vision
    "opencv-python>=4.5.0",
    
    # Experiment tracking
    "wandb>=0.12.0",
    
    # LeRobot dependencies (for ACT policy loading)
    "lerobot",
    
    # Optional dependencies for development
    "dataclasses;python_version<'3.9'",  # Backport for older Python
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
]
notebooks = [
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/villekuosmanen/physical-ai-interpretability"
Repository = "https://github.com/villekuosmanen/physical-ai-interpretability"
Issues = "https://github.com/villekuosmanen/physical-ai-interpretability/issues"

# [project.scripts]
# train-sae = "scripts.train_sae:main"  # Scripts are currently outside src package

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
